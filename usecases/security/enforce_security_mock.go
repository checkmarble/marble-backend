// Code generated by MockGen. DO NOT EDIT.
// Source: marble/marble-backend/usecases/security (interfaces: EnforceSecurity)

// Package mocks is a generated GoMock package.
package security

import (
	models "marble/marble-backend/models"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockEnforceSecurity is a mock of EnforceSecurity interface.
type MockEnforceSecurity struct {
	ctrl     *gomock.Controller
	recorder *MockEnforceSecurityMockRecorder
}

// MockEnforceSecurityMockRecorder is the mock recorder for MockEnforceSecurity.
type MockEnforceSecurityMockRecorder struct {
	mock *MockEnforceSecurity
}

// NewMockEnforceSecurity creates a new mock instance.
func NewMockEnforceSecurity(ctrl *gomock.Controller) *MockEnforceSecurity {
	mock := &MockEnforceSecurity{ctrl: ctrl}
	mock.recorder = &MockEnforceSecurityMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnforceSecurity) EXPECT() *MockEnforceSecurityMockRecorder {
	return m.recorder
}

// Permission mocks base method.
func (m *MockEnforceSecurity) Permission(arg0 models.Permission) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Permission", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Permission indicates an expected call of Permission.
func (mr *MockEnforceSecurityMockRecorder) Permission(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Permission", reflect.TypeOf((*MockEnforceSecurity)(nil).Permission), arg0)
}

// ReadOrganization mocks base method.
func (m *MockEnforceSecurity) ReadOrganization(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadOrganization", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReadOrganization indicates an expected call of ReadOrganization.
func (mr *MockEnforceSecurityMockRecorder) ReadOrganization(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadOrganization", reflect.TypeOf((*MockEnforceSecurity)(nil).ReadOrganization), arg0)
}
