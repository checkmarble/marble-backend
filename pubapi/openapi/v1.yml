openapi: 3.1.0
info:
  title: Marble decision engine API
  description: Public API on decisions and data ingestion.
  version: 1.0.0
x-readme:
  explorer-enabled: false
  proxy-enabled: false
  samples-languages:
    - shell
    - python
    - javascript
    - go
    - ruby
servers:
  - url: https://api.checkmarble.com/v1
tags:
  - name: Decisions
    description: Routes for decisions
  - name: Screening
    description: Routes for screening
  - name: Batch executions
    description: Routes for batch executions
  - name: Ingestion
    description: Generic ingestion endpoints
paths:
  /decisions:
    get:
      operationId: listDecision
      tags:
        - Decisions
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: List decisions
      description: |
        List decisions according to a filter set.

        Listing decisions is always time-boxed between the provided `start` and `end` dates. If those parameters are omitted, it defaults to the past 30 days. If the parameters are provided, their range cannot exceed 90 days.
      parameters:
        - name: scenario_id
          description: Filter decisions by their scenario
          in: query
          schema:
            type: string
            format: uuid
        - name: batch_execution_id
          description: Filter decisions created by a specific batch execution
          in: query
          schema:
            type: string
            format: uuid
        - name: case_id
          description: Filter decisions added to a given case
          in: query
          schema:
            type: string
            format: uuid
        - name: outcome
          description: Filter decisions having a specific outcome
          in: query
          schema:
            type: string
            enum: ["approve", "review", "block_and_review", "decline"]
        - name: review_status
          description: |
            Filter decisions having a specific review status.

            Can only be used if `outcome` if set to `block_and_review`.
          in: query
          schema:
            type: string
            enum: ["pending", "approve", "decline"]
        - name: trigger_object_id
          description: Filter decisions related a a specific trigger's `object_id`.
          in: query
          schema:
            type: string
            maxLength: 256
        - name: pivot_value
          description: Filter decisions with a given pivot object value
          in: query
          schema:
            type: string
            maxLength: 256
        - name: start
          description: |
            Only display decisions created after this date.

            If provided, one must also provide an `end` date.
          in: query
          schema:
            type: string
            format: date-time
            default: "30 days ago"
        - name: end
          description: |
            Only display decisions created before this date.

            If provided, one must also provide a `start` date.
          in: query
          schema:
            type: string
            format: date-time
            default: "now"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/offset_id"
      responses:
        "200":
          description: List of decisions
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - $ref: "#/components/schemas/BasePagination"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Decision"
        "400":
          $ref: "#/components/responses/400"

    post:
      operationId: createDecision
      tags:
        - Decisions
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Create decision
      description: |
        Create a decision by running a trigger object through a scenario
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - scenario_id
                - trigger_object
              properties:
                scenario_id:
                  description: ID of the scenario to run
                  type: string
                  format: uuid
                trigger_object:
                  description: The object on which to make a decision
                  type: object
                  additionalProperties: true
                  required:
                    - object_id
                    - updated_at
      responses:
        "200":
          description: A decision was successfully created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - $ref: "#/components/schemas/BasePagination"
                  - type: object
                    required: [metadata]
                    properties:
                      metadata:
                        required:
                          - total
                          - approve
                          - review
                          - block_and_review
                          - decline
                          - skipped
                        properties:
                          total:
                            type: integer
                          approve:
                            type: integer
                          review:
                            type: integer
                          block_and_review:
                            type: integer
                          decline:
                            type: integer
                          skipped:
                            type: integer
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/Decision"
                            - $ref: "#/components/schemas/DecisionExecutions"
        "400":
          $ref: "#/components/responses/400"
        "422":
          $ref: "#/components/responses/422"

  /decisions/all:
    post:
      operationId: createAllDecisions
      tags:
        - Decisions
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Create all decisions
      description: |
        Create decisions by running a trigger object through all eligible scenarios
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - trigger_object_type
                - trigger_object
              properties:
                trigger_object_type:
                  description: Type of the trigger object that is passed in
                  type: string
                trigger_object:
                  description: The object on which to make a decision
                  type: object
                  additionalProperties: true
                  required:
                    - object_id
                    - updated_at
      responses:
        "200":
          description: Between 0 and N decisions were created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - $ref: "#/components/schemas/BasePagination"
                  - type: object
                    required: [metadata]
                    properties:
                      metadata:
                        required:
                          - total
                          - approve
                          - review
                          - block_and_review
                          - decline
                          - skipped
                        properties:
                          total:
                            type: integer
                          approve:
                            type: integer
                          review:
                            type: integer
                          block_and_review:
                            type: integer
                          decline:
                            type: integer
                          skipped:
                            type: integer
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/Decision"
                            - $ref: "#/components/schemas/DecisionExecutions"
        "400":
          $ref: "#/components/responses/400"
        "422":
          $ref: "#/components/responses/400"

  /decisions/{decisionId}:
    get:
      operationId: getDecision
      tags:
        - Decisions
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Get a decision
      description: |
        Retrieve a decision by ID.
      parameters:
        - name: decisionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Details of decision
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: "#/components/schemas/Decision"
                          - $ref: "#/components/schemas/DecisionExecutions"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"

  /decisions/{decisionId}/snooze:
    post:
      operationId: snoozeRule
      tags:
        - Decisions
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Snooze a rule
      description: |
        Snooze a rule for a pivot value.

        Snooze a rule for the provided duration, for the pivot value the decision pertains to. The given decision must be part of a case for its rules to be snoozed.
      parameters:
        - name: decisionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - rule_id
                - duration
              properties:
                rule_id:
                  type: string
                  format: uuid
                duration:
                  description: |
                    Duration for which the snooze will take effect.

                    Must use Go's [`time.ParseDuration`](https://pkg.go.dev/time#example-ParseDuration) syntax (e.g. "1h", "10h30m", etc.).

                    Maximum value is 180 days ("4320h").
                  type: string
                  format: duration
      responses:
        "201":
          description: Rule was successfully snoozed
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "422":
          $ref: "#/components/responses/422"

  /decisions/{decisionId}/screenings:
    get:
      operationId: getScreeningForDecision
      tags:
        - Screening
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Get screening results
      description: Retrieve screening result details for decision
      parameters:
        - name: decisionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of screening results for the decision
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/Screening"
                            - $ref: "#/components/schemas/ScreeningExecutions"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"

  /screening/entities/{entityId}:
    get:
      operationId: getScreeningEntity
      tags:
        - Screening
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Get an OpenSanctions entity
      description: Retrieve a raw OpenSanctions entity from its ID.
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Entity data as returned by OpenSanctions
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/ScreeningMatchPayload"
        "404":
          $ref: "#/components/responses/404"

  /screening/{screeningId}/refine:
    post:
      operationId: refineScreening
      tags:
        - Screening
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Refine a screening result
      description: |
        Replace a screening result with refined results.

        This endpoint will replace the provided screening result with one containing the result of the included query.
      parameters:
        - name: screeningId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              oneOf:
                - $ref: "#/components/schemas/ScreeningSearchThing"
                - $ref: "#/components/schemas/ScreeningSearchPerson"
                - $ref: "#/components/schemas/ScreeningSearchOrganization"
                - $ref: "#/components/schemas/ScreeningSearchVehicle"
      responses:
        "200":
          description: Refined screening result for the decision
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: "#/components/schemas/Screening"
                          - $ref: "#/components/schemas/ScreeningExecutions"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "422":
          $ref: "#/components/responses/422"

  /screening/{screeningId}/search:
    post:
      operationId: searchScreening
      tags:
        - Screening
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Perform a screening search
      description: |
        Retrieve screening result without persisting them.

        This endpoint will **not** replace the provided screening result, but allow to preview the results as executed in the original decision's context (using its unique counterparty ID and eligible whitelisted entries).
      parameters:
        - name: screeningId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScreeningSearchQuery"
      responses:
        "200":
          description: Screening results from the search
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ScreeningMatchPayload"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "422":
          $ref: "#/components/responses/422"

  /screening/search:
    post:
      operationId: searchScreeningFreeformCheck
      tags:
        - Screening
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Perform a free-form screening search
      description: Search for sanctioned entities outside of the context of a decision.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScreeningSearchQuery"
      responses:
        "200":
          description: Screening result from the search
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ScreeningMatchPayload"
        "400":
          $ref: "#/components/responses/400"

  /screening/matches/{matchId}:
    post:
      operationId: reviewScreeningMatch
      tags:
        - Screening
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Review a screening match
      description: Set the review status of a screening match
      parameters:
        - name: matchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - no_hit
                    - confirmed_hit
                whitelist:
                  description: Whether to whitelist the "no_hit" status to prevent triggering the match in the future
                  type: boolean
                  default: false
      responses:
        "200":
          description: Match content reflecting the new status
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/ScreeningMatch"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "422":
          $ref: "#/components/responses/422"

  /screening/whitelists:
    post:
      operationId: addScreeningWhitelist
      tags:
        - Screening
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Whitelist an entity
      description: |
        Add a set of search term and entity ID that will not set off a screening alert in the future.

        This endpoint does not verify that the provided entity ID matches an **actual** entity on an OpenSanctions list. It is the responsibility of the caller to make sure they whitelist the correct entity ID for their needs.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - counterparty
                - entity_id
              properties:
                counterparty:
                  description:
                    The unique counterparty identifier that should be whitelisted
                    when yielding the associated entity ID
                  type: string
                entity_id:
                  description: The OpenSanctions entity ID to whitelist
                  type: string
      responses:
        "201":
          description: The entity was whitelisted
        "400":
          $ref: "#/components/responses/400"
    delete:
      operationId: deleteScreeningWhitelist
      tags:
        - Screening
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Remove an entity whitelist
      description: |
        Delete a previously whitelisted entity, a match from the search term to the entity ID will subsequently trigger alerts.

        If only `entity_id` is provided, all whitelist entries for that entity will be removed, regardless of which counterparty term triggers it.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - entity_id
              properties:
                counterparty:
                  description:
                    The unique counterparty identifier that should be whitelisted
                    when yielding the associated entity ID
                  type: string
                entity_id:
                  description: The OpenSanctions entity ID to whitelist
                  type: string
      responses:
        "204":
          description: The whitelist entry was deleted
        "400":
          $ref: "#/components/responses/400"

  /screening/whitelists/search:
    post:
      operationId: searchScreeningWhitelist
      tags:
        - Screening
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: Search whitelisted entities
      description: |
        Search for whitelisted entities by OpenSanctions entity ID and/or unique counterparty identifier.

        At least one of `counterparty` or `entity_id` is required to perform a search.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
              properties:
                counterparty:
                  description: The unique counterparty identifier to search for
                  type: string
                entity_id:
                  description: The OpenSanctions entity ID to search for
                  type: string
      responses:
        "200":
          description: List of whitelist entries for the requested objects
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ScreeningWhitelistEntry"
        "400":
          $ref: "#/components/responses/400"

  /batch-executions:
    get:
      operationId: listBatchExecutions
      tags:
        - Batch executions
      security:
        - BearerTokenAuth: []
        - ApiKeyAuth: []
      summary: List batch executions
      description: |
        List scheduled, ongoing and finished batch executions
      parameters:
        - name: scenario_id
          description: List batch executions for a specific scenario
          in: query
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of batch executions matching the filters
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/BatchExecution"
        "400":
          $ref: "#/components/responses/400"

components:
  securitySchemes:
    BearerTokenAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY

  responses:
    "400":
      description: Provided parameters or payload is malformed or invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    "401":
      description: Credentials are missing or invalid
    "403":
      description:
        The provided credentials are missing the required permissions for
        the requested action
    "404":
      description: The requested resource does not exist
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    "409":
      description: The resource being created conflicts with an existing resource
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    "422":
      description: The requested action is not possible on the requested resource
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  parameters:
    limit:
      name: limit
      description: How many item to return on each page
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100

    order:
      name: order
      description: Sort direction for items
      in: query
      schema:
        type: string
        enum: ["ASC", "DESC"]
    offset_id:
      name: offset_id
      description: |
        Value to start iterating from.

        Should be a value returned in the `pagination.next_page_id` field of a response.
      in: query
      schema:
        type: string

  schemas:
    BaseResponse:
      title: Base response
      type: object
      required:
        - data
      properties:
        data:
          description: Requested objects from the API

    BasePagination:
      type: object
      properties:
        pagination:
          title: Pagination information
          type: object
          required:
            - has_more
          properties:
            has_more:
              description: Whether there are more elements to iteration through
              type: boolean
            next_page_id:
              description: Value to use in pagination filter to request for the next page
              type: string

    Error:
      title: Error response
      type: object
      required:
        - code
      properties:
        code:
          description: Defined, machine-readable identifier for the error
          type: string
          enum:
            - invalid_payload
            - unprocessable_entity
            - not_found
            - feature_disabled
            - feature_not_configured
            - server_error
        messages:
          description: List of human-readable descriptions for the error
          type: array
          items:
            type: string
        detail:
          description: Free-form objects providing details on the error
          type: object
          additionalProperties: true

    Ref:
      title: Reference
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: Optional name for the referenced object, not all references will have it.

    Scenario:
      title: Scenario
      type: object
      required:
        - id
        - iteration_id
        - version
      properties:
        id:
          description: ID of the scenario to use when creating decisions
          type: string
          format: uuid
        iteration_id:
          description: Internal ID for the version of the scenario
          type: string
          format: uuid
        version:
          description: Human-readable version of the scenario
          type: string

    Decision:
      title: Decision
      type: object
      required:
        - id
        - outcome
        - review_status
        - scenario
        - trigger_object
        - score
        - created_at
      properties:
        id:
          type: string
          format: uuid
        batch_execution_id:
          type: string
          format: uuid
        case:
          $ref: "#/components/schemas/Ref"
        scenario:
          $ref: "#/components/schemas/Scenario"
        trigger_object:
          type: object
          required:
            - object_id
            - updated_at
          properties:
            object_id:
              type: string
            updated_at:
              type: string
              format: date-time
          additionalProperties: true
        outcome:
          description: Outcome of the decision
          type: string
          enum: ["approve", "review", "block_and_review", "decline"]
        review_status:
          description: Manual arbitration status for the decision when the outcome was `block_and_review`
          type: string
          enum: ["pending", "approve", "decline"]
          nullable: true
        score:
          description: Final score for the decision
          type: integer
        created_at:
          type: string
          format: date-time

    DecisionExecutions:
      type: object
      required:
        - rules
        - screenings
      properties:
        rules:
          description: Rules that were executed for this decision
          type: array
          items:
            $ref: "#/components/schemas/DecisionRule"
        screenings:
          description: List of screening results
          type: array
          items:
            $ref: "#/components/schemas/Screening"

    DecisionRule:
      title: Rule execution
      type: object
      required:
        - name
        - outcome
        - score_modifier
      properties:
        name:
          description: Name of the rule in the scenario version
          type: string
        outcome:
          description: Outcome of the rule execution
          type: string
          enum: ["hit", "no_hit", "snoozed", "error"]
        score_modifier:
          description: Impact of this rule on the decision score if it hit
          type: integer
        error:
          description: Any error that occured while executing the rule
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: integer
            message:
              type: string

    Screening:
      title: Screening execution
      type: object
      required:
        - id
        - status
        - query
        - match_count
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - in_review
            - no_hit
            - confirmed_hit
            - error
        query:
          type: object
          properties:
            queries:
              description:
                Queries that were submitted to OpenSanctions with their
                IDs
              type: object
              additionalProperties:
                $ref: "#/components/schemas/ScreeningSearchQuery"
              example:
                8dd2edf9-6281-401a-b3e8-e65d974ed930:
                  Thing:
                    name: Jean-Baptiste Zorg
          additionalProperties: true
        partial:
          description: Whether there were more matches than considered within `match_count`
          type: boolean
        match_count:
          description: Number of matches for the query
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ScreeningExecutions:
      type: object
      required: ["matches"]
      properties:
        matches:
          type: array
          items:
            $ref: "#/components/schemas/ScreeningMatch"

    ScreeningMatch:
      title: Screening match
      type: object
      properties:
        id:
          type: string
          format: uuid
        queries:
          description: List of query IDs this match matched with
          type: array
          items:
            type: string
            format: uuid
        status:
          type: string
          enum: ["pending", "no_hit", "confirmed_hit", "skipped"]
        payload:
          $ref: "#/components/schemas/ScreeningMatchPayload"

    ScreeningMatchPayload:
      title: Screening match entity
      type: object
      description: |
        OpenSanctions entity data.

        This is an object as defined by [OpenSanctions entity format](https://api.opensanctions.org/#tag/Data-access/operation/fetch_entity_entities__entity_id__get).
      additionalProperties: true
      required:
        - id
        - datasets
        - properties
      properties:
        id:
          description: OpenSanctions entity ID
          type: string
        datasets:
          type: array
          items:
            type: string
        properties:
          type: object
          additionalProperties: true
      example:
        id: ABC123
        schema: Organization
        datasets:
          - us_sam_exclusions
        score: 0.75
        properties:
          name:
            - ACME Inc.

    ScreeningSearchQuery:
      title: Screening search query
      type: object
      oneOf:
        - $ref: "#/components/schemas/ScreeningSearchThing"
        - $ref: "#/components/schemas/ScreeningSearchPerson"
        - $ref: "#/components/schemas/ScreeningSearchOrganization"
        - $ref: "#/components/schemas/ScreeningSearchVehicle"

    ScreeningSearchThing:
      title: Any entity type
      type: object
      required:
        - Thing
      properties:
        Thing:
          type: object
          minProperties: 1
          properties:
            name:
              type: string

    ScreeningSearchPerson:
      title: Individual
      type: object
      required:
        - Person
      properties:
        Person:
          type: object
          minProperties: 1
          properties:
            name:
              type: string
            birthDate:
              type: string
            nationality:
              type: string
            passportNumber:
              type: string
            address:
              type: string

    ScreeningSearchOrganization:
      title: Organization or Company
      type: object
      required:
        - Organization
      properties:
        Organization:
          type: object
          minProperties: 1
          properties:
            name:
              type: string
            country:
              type: string
            registrationNumber:
              type: string
            address:
              type: string

    ScreeningSearchVehicle:
      title: Vehicle
      type: object
      required:
        - Vehicle
      properties:
        Vehicle:
          type: object
          minProperties: 1
          properties:
            name:
              type: string
            registrationNumber:
              type: string

    ScreeningWhitelistEntry:
      title: Screening whitelist entry
      type: object
      required:
        - counterparty
        - entity_id
      properties:
        counterparty:
          description: Unique counterparty identifier
          type: string
        entity_id:
          description: OpenSanctions entity ID
          type: string

    BatchExecution:
      title: Batch execution
      type: object
      required:
        - id
        - scenario
        - manual
        - status
        - decisions_created
        - created_at
      properties:
        id:
          description: ID of the batch execution
          type: string
          format: uuid
        scenario:
          $ref: "#/components/schemas/Scenario"
        manual:
          description: Whether the batch was started manually (or through scheduling)
          type: boolean
        status:
          description: Status of the batch execution
          type: string
          enum:
            ["pending", "processing", "success", "partial_failure", "failure"]
        decisions_created:
          description: Number of decisions that were created by this batch execution
          type: integer
          min: 0
        created_at:
          description: Date the execution was created
          type: string
          format: date-time
        finished_at:
          description: Date the execution finished processing
          type: string
          format: date-time
