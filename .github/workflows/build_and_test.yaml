name: Build and test back-end repo

on: [pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test_migration_ordering:
    name: Test migration ordering
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      checks: write
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: marble_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Cache Go modules and tools
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-tools-${{ hashFiles('**/go.mod') }}

      - name: Install goose
        run: |
          if ! command -v goose &> /dev/null; then
            go install github.com/pressly/goose/v3/cmd/goose@latest
          fi
          echo "$(go env GOPATH)/bin" >> "$GITHUB_PATH"
          
      - name: Run migrations on main branch
        env:
          GOOSE_DRIVER: postgres
          GOOSE_DBSTRING: host=localhost port=5432 user=postgres password=postgres dbname=marble_test sslmode=disable
        run: goose -dir repositories/migrations up

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          
      - name: Run migrations on PR branch
        env:
          GOOSE_DRIVER: postgres
          GOOSE_DBSTRING: host=localhost port=5432 user=postgres password=postgres dbname=marble_test sslmode=disable
        run: |
          echo "Running migrations on PR branch..."
          goose -dir repositories/migrations up || {
            echo "‚ùå Migration failed! This indicates migration ordering issues."
            echo "Check if your new migrations can run after main branch migrations."
            exit 1
          }

  test_backend:
    permissions:
      contents: read
      pull-requests: read
      checks: write
    secrets:
      README_API_KEY: ${{ secrets.README_API_KEY }}
    uses: ./.github/workflows/backend_test_workflow.yaml
