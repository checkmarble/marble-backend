name: Deploy back-end

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: "Github environment to use"
        required: true
      version:
        type: string
        description: "version to deploy"
        required: true
    secrets:
      segment_write_key_opensource:
        description: write key for segment (open source deployment)

permissions:
  contents: read
  id-token: "write" # needed for using open id token to authenticate with GCP services

jobs:
  build_and_deploy_backend:
    name: Build and deploy back-end
    environment: ${{ inputs.environment }}
    env:
      VERSION_IMAGE: europe-west1-docker.pkg.dev/marble-infra/marble/marble-backend:${{ inputs.version }}
      COMMIT_IMAGE: europe-west1-docker.pkg.dev/marble-infra/marble/marble-backend:${{ github.sha }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: auth github actions to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER_ID }}
          service_account: ${{ vars.SERVICE_ACCOUNT_EMAIL }}

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: europe-west1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Check if image exists (for production deployments)
        id: check_image
        run: |
          echo "Looking for existing image: ${{ env.COMMIT_IMAGE }}"

          if docker manifest inspect ${{ env.COMMIT_IMAGE }} > /dev/null 2>&1; then
            echo "âœ… Image with commit hash ${{ github.sha }} already exists, will reuse it"
            echo "should_build=false" >> "$GITHUB_OUTPUT"
          else
            echo "No image found for commit hash ${{ github.sha }}, build a new one"
            echo "should_build=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Extract version from tag
        id: version
        run: echo "MARBLE_VERSION=$(git describe --tags)" >> "$GITHUB_OUTPUT"

      - name: Build and push
        if: steps.check_image.outputs.should_build == 'true'
        uses: docker/build-push-action@v5
        with:
          push: true
          build-args: |
            MARBLE_VERSION=${{ steps.version.outputs.MARBLE_VERSION }}
            SEGMENT_WRITE_KEY=${{ secrets.segment_write_key_opensource }}
          tags: ${{ env.COMMIT_IMAGE }}

      - name: Tag existing image with version
        run: |
          echo "Retagging existing image ${{ env.COMMIT_IMAGE }} as ${{ env.VERSION_IMAGE }}"
          docker buildx imagetools create --tag ${{ env.VERSION_IMAGE }} ${{ env.COMMIT_IMAGE }}

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Deploy migration job
        run: |
          gcloud run jobs deploy migrations \
            --quiet \
            --image=${{ env.VERSION_IMAGE }} \
            --region="europe-west1" \
            --execute-now \
            --wait

      - name: Deploy server
        run: |
          gcloud run deploy marble-backend \
            --quiet \
            --image=${{ env.VERSION_IMAGE }} \
            --region="europe-west1"

      - name: Deploy execute async worker service
        run: |
          gcloud run deploy marble-backend-worker \
            --quiet \
            --image=${{ env.VERSION_IMAGE }} \
            --region="europe-west1"
