package models

import (
	"github.com/cockroachdb/errors"
)

type Permission int

const (
	DECISION_READ Permission = iota
	DECISION_CREATE
	PHANTOM_DECISION_CREATE
	INGESTION
	SCENARIO_READ
	SCENARIO_CREATE
	SCENARIO_PUBLISH
	DATA_MODEL_READ
	DATA_MODEL_WRITE
	APIKEY_READ
	APIKEY_CREATE
	ANALYTICS_READ
	ORGANIZATIONS_LIST
	ORGANIZATIONS_CREATE
	ORGANIZATIONS_UPDATE
	ORGANIZATIONS_DELETE
	USER_CREATE
	MARBLE_USER_READ
	MARBLE_USER_CREATE
	MARBLE_USER_UPDATE
	MARBLE_USER_DELETE
	ANY_ORGANIZATION_ID_IN_CONTEXT
	ANY_PARTNER_ID_IN_CONTEXT
	CUSTOM_LISTS_READ
	CUSTOM_LISTS_EDIT
	MARBLE_USER_LIST
	CASE_READ_WRITE
	INBOX_EDITOR
	TRANSFER_READ
	TRANSFER_UPDATE
	TRANSFER_CREATE
	TRANSFER_ALERT_READ
	TRANSFER_ALERT_UPDATE
	TRANSFER_ALERT_CREATE
	PARTNER_LIST
	PARTNER_CREATE
	PARTNER_READ
	PARTNER_UPDATE
	LICENSE_LIST
	LICENSE_CREATE
	LICENSE_UPDATE
	WEBHOOK_EVENT
	WEBHOOK
	READ_SNOOZES
	CREATE_SNOOZE
	TAG_READ
	TAG_CREATE
	TAG_UPDATE
	TAG_DELETE
	SANCTION_CHECK_WHITELIST_READ
	SANCTION_CHECK_WHITELIST_WRITE
	SANCTION_CHECK_FREEFORM_SEARCH
	ANNOTATION_DELETE
)

func (r Permission) String() (string, error) {
	permissions := [...]string{
		"DECISION_READ",
		"DECISION_CREATE",
		"PHANTOM_DECISION_CREATE",
		"INGESTION",
		"SCENARIO_READ",
		"SCENARIO_CREATE",
		"SCENARIO_PUBLISH",
		"DATA_MODEL_READ",
		"DATA_MODEL_WRITE",
		"APIKEY_READ",
		"APIKEY_CREATE",
		"ANALYTICS_READ",
		"ORGANIZATIONS_LIST",
		"ORGANIZATIONS_CREATE",
		"ORGANIZATIONS_UPDATE",
		"ORGANIZATIONS_DELETE",
		"USER_CREATE",
		"MARBLE_USER_READ",
		"MARBLE_USER_CREATE",
		"MARBLE_USER_UPDATE",
		"MARBLE_USER_DELETE",
		"ANY_ORGANIZATION_ID_IN_CONTEXT",
		"ANY_PARTNER_ID_IN_CONTEXT",
		"CUSTOM_LISTS_READ",
		"CUSTOM_LISTS_EDIT",
		"MARBLE_USER_LIST",
		"CASE_READ_WRITE",
		"INBOX_EDITOR",
		"TRANSFER_READ",
		"TRANSFER_UPDATE",
		"TRANSFER_CREATE",
		"TRANSFER_ALERT_READ",
		"TRANSFER_ALERT_UPDATE",
		"TRANSFER_ALERT_CREATE",
		"PARTNER_LIST",
		"PARTNER_CREATE",
		"PARTNER_READ",
		"PARTNER_UPDATE",
		"LICENSE_LIST",
		"LICENSE_CREATE",
		"LICENSE_UPDATE",
		"WEBHOOK_EVENT",
		"WEBHOOK",
		"READ_SNOOZES",
		"CREATE_SNOOZE",
		"TAG_READ",
		"TAG_CREATE",
		"TAG_UPDATE",
		"TAG_DELETE",
		"SANCTION_CHECK_WHITELIST_READ",
		"SANCTION_CHECK_WHITELIST_WRITE",
		"SANCTION_CHECK_FREEFORM_SEARCH",
		"ANNOTATION_DELETE",
	}
	if int(r) > len(permissions)-1 {
		return "", errors.New("Invalid permission: no string representation has been set")
	}
	return permissions[r], nil
}
